/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResumeRouteImport } from './routes/resume'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as BlogRouteImport } from './routes/blog'
import { Route as AboutMeRouteImport } from './routes/about-me'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogSlugRouteImport } from './routes/blog.$slug'

const ResumeRoute = ResumeRouteImport.update({
  id: '/resume',
  path: '/resume',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutMeRoute = AboutMeRouteImport.update({
  id: '/about-me',
  path: '/about-me',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => BlogRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about-me': typeof AboutMeRoute
  '/blog': typeof BlogRouteWithChildren
  '/projects': typeof ProjectsRoute
  '/resume': typeof ResumeRoute
  '/blog/$slug': typeof BlogSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about-me': typeof AboutMeRoute
  '/blog': typeof BlogRouteWithChildren
  '/projects': typeof ProjectsRoute
  '/resume': typeof ResumeRoute
  '/blog/$slug': typeof BlogSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about-me': typeof AboutMeRoute
  '/blog': typeof BlogRouteWithChildren
  '/projects': typeof ProjectsRoute
  '/resume': typeof ResumeRoute
  '/blog/$slug': typeof BlogSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about-me'
    | '/blog'
    | '/projects'
    | '/resume'
    | '/blog/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about-me' | '/blog' | '/projects' | '/resume' | '/blog/$slug'
  id:
    | '__root__'
    | '/'
    | '/about-me'
    | '/blog'
    | '/projects'
    | '/resume'
    | '/blog/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutMeRoute: typeof AboutMeRoute
  BlogRoute: typeof BlogRouteWithChildren
  ProjectsRoute: typeof ProjectsRoute
  ResumeRoute: typeof ResumeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/resume': {
      id: '/resume'
      path: '/resume'
      fullPath: '/resume'
      preLoaderRoute: typeof ResumeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about-me': {
      id: '/about-me'
      path: '/about-me'
      fullPath: '/about-me'
      preLoaderRoute: typeof AboutMeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof BlogRoute
    }
  }
}

interface BlogRouteChildren {
  BlogSlugRoute: typeof BlogSlugRoute
}

const BlogRouteChildren: BlogRouteChildren = {
  BlogSlugRoute: BlogSlugRoute,
}

const BlogRouteWithChildren = BlogRoute._addFileChildren(BlogRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutMeRoute: AboutMeRoute,
  BlogRoute: BlogRouteWithChildren,
  ProjectsRoute: ProjectsRoute,
  ResumeRoute: ResumeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
